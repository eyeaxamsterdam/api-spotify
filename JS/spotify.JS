const hash = window.location.hash
  .substring(1)
  .split("&")
  .reduce(function(initial, item) {
    if (item) {
      var parts = item.split("=");
      initial[parts[0]] = decodeURIComponent(parts[1]);
    }
    return initial;
  }, {});
window.location.hash = "";

// Set token
let _token = hash.access_token;
console.log(_token);

const authEndpoint = "https://accounts.spotify.com/authorize";

// Replace with your app's client ID, redirect URI and desired scopes
const clientId = "aafde63513c44f8c9f558c75a05a6612";
const redirectUri = "https://eyeaxamsterdam.github.io/API-Hack-Capstone/";
const scopes = [
  "streaming",
  "user-read-email",
  "user-read-private",
  "user-modify-playback-state"
];

// If there is no token, redirect to Spotify authorization
if (!_token) {
  window.location = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(
    "%20"
  )}&response_type=token&show_dialog=true`;
}

// Called when the Spotify Web Playback SDK is ready to use
window.onSpotifyWebPlaybackSDKReady = () => {
  // Define the Spotify Connect device, getOAuthToken has an actual token
  // hardcoded for the sake of simplicity
  var player = new Spotify.Player({
    name: "A Spotify Web SDK Player",
    getOAuthToken: callback => {
      callback(_token);
    },
    volume: 0.1
  });

  // Called when connected to the player created beforehand successfully
  player.addListener("ready", ({ device_id }) => {
    console.log("Ready with Device ID", device_id);

    const play = ({
      spotify_uri,
      playerInstance: {
        _options: { getOAuthToken, id }
      }
    }) => {
      getOAuthToken(access_token => {
        fetch(`https://api.spotify.com/v1/me/player/play?device_id=${id}`, {
          method: "PUT",
          body: JSON.stringify({ uris: [spotify_uri] }),
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${access_token}`
          }
        });
      });
    };

    play({
      playerInstance: player,
      spotify_uri: "spotify:track:5V3b2UB9tCAHuqXj2b2EP7"
    });
  });

  // Connect to the player created beforehand, this is equivalent to
  // creating a new device which will be visible for Spotify Connect
  player.connect();
};
